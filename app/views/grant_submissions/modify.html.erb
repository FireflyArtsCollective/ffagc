<div class="container">
  <h1><%= link_to "Firefly Art Grants", :controller => "home", :action => "index" %>: Modify a Grant Proposal</h1>

  <% if artist_logged_in? %>

    <%= semantic_form_for @grant_submission, :html => { :onsubmit => 'return validate();'} do |f| %>
      <fieldset>
        <%= f.input :name, :label => "Name of Piece", :required => false, :validate => true %>
        <li class="string input required stringish" id="grant_submission_name_input">
          <label class="label" for="grant_submission_grant_id">Grant</label>
          <%= collection_select(:grant_submission, :grant_id, Grant.all, :id, :name, :include_blank => "(select a grant)") %>
        </li>
  
        <%= f.input :requested_funding_dollars, :label => "Requested Funding ($)", :required => false, :validate => true, :input_html => { :onKeyUp => "numericFilter(this);" }  %>
  
        <li class="string input required stringish" id="grant_submission_name_input">
          <label class="label" for="grant_submission_proposal">Current Application PDF:</label>
          <input type="test" style="margin-left:-5px" disabled="true" value="<%= @grant_submission.proposal_identifier %>"/><br/><br/>
          <label class="label" for="grant_submission_proposal">(Optional) Replace PDF:</label>
          <%= f.file_field :proposal, :required => false, :validate => true, :style => "margin-left:-5px" %>
        </li>
        
        <% if admin_logged_in?%>
          <%= f.input :granted_funding_dollars, :label => "Granted Funding ($)", :validate => true, :input_html => { :onKeyUp => "numericFilter(this);" }  %>
          <%= f.input :funded, :label => "Confirm Funding", :style => "border:all" %>
        <% end %>
  
        <br /><br />
        <%= submit_tag("Update Application", class: "button")%>
      </fieldset>
    <% end %>
    <br />
    <%= link_to 'Back', :controller => "artists", :action => "index" %>
  <% else %>
    You must be logged in as an artist to modify a grant proposal. (<%= link_to "Log In", :controller => "artists", :action => "index" %>)
    <br />
    <br />
    <%= link_to 'Back', :back %>
  <% end %>

  <script>
  function numericFilter(txb) {
    txb.value = txb.value.replace(/[^\0-9]/ig, "");
    if(txb.value > 1000) {
      txb.value = 1000;
    }
  }

  function validate() {
    errors = 0;

    //round decimals in funding amounts -- whole dollars only
    var requested_funding_dollars = document.getElementById('grant_submission_requested_funding_dollars').value;
    var requested_funding_dollars_num = parseInt(requested_funding_dollars).toFixed(0);
    document.getElementById('grant_submission_requested_funding_dollars').value = requested_funding_dollars_num.toString();

    judge.validate(document.getElementById('grant_submission_name'), {
      valid: function(element) {
        element.style.border = '1px solid green';
      },
      invalid: function(element, messages) {
        element.style.border = '1px solid red';
        alert('name error: ' + messages.join(','));
        errors++;
      }
    });

    if(document.getElementById("grant_submission_grant_id").value != "") {
      document.getElementById("grant_submission_grant_id").style.border = '1px solid green';
    } else {
      errors++;
      alert('error: please select a grant to apply for')
      document.getElementById("grant_submission_grant_id").style.border = '1px solid red';
    }

    judge.validate(document.getElementById('grant_submission_requested_funding_dollars'), {
      valid: function(element) {
        element.style.border = '1px solid green';
      },
      invalid: function(element, messages) {
        element.style.border = '1px solid red';
        alert('requested funding error: ' + messages.join(','));
        errors++;
      }
    });
    
    // TODO: add validation that the grant selection is in the set of open-submit grants.
    
    return errors===0;
  }

  </script>
</div>